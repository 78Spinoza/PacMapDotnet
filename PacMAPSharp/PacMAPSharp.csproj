<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <LangVersion>12.0</LangVersion>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

    <!-- Package Information -->
    <PackageId>PacMAPSharp</PackageId>
    <Title>PacMAP Sharp - Fast Dimensionality Reduction</Title>
    <Version>1.1.0</Version>
    <Authors>PacMAP Team</Authors>
    <Company>Open Source</Company>
    <Description>Enhanced C# wrapper for PacMAP (Pairwise Controlled Manifold Approximation) dimensionality reduction with HNSW acceleration, density-adaptive scaling, and comprehensive quality validation.</Description>
    <PackageTags>dimensionality-reduction;machine-learning;pacmap;embedding;hnsw;visualization</PackageTags>
    <PackageProjectUrl>https://github.com/YingfanWang/PaCMAP</PackageProjectUrl>
    <RepositoryUrl>https://github.com/YingfanWang/PaCMAP</RepositoryUrl>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes>
      v1.1.0: Major HNSW incorporation completion - deterministic construction, local distance scaling, 4-phase transform pipeline, comprehensive normalization system, and "No Man's Land" detection. Updated Rust core to v0.4.0 with production-ready HNSW implementation.
      v1.0.3: Updated Rust core to v0.3.4 with professional-grade progress callbacks and thread-safe FFI callback system
      v1.0.2: Updated Rust core to v0.3.3 with enhanced HNSW auto-retry and improved parameter optimization
      v1.0.1: Bug fixes and improved error handling
      v1.0.0: Initial release with HNSW acceleration, local distance scaling, and enhanced quality validation
    </PackageReleaseNotes>

    <!-- Documentation -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>

    <!-- Build Configuration -->
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PlatformTarget>x64</PlatformTarget>

    <!-- Symbols -->
    <DebugType>embedded</DebugType>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <!-- Native DLL Packaging - Force Copy with None Item Type -->
  <ItemGroup>
    <!-- Windows Native Libraries -->
    <None Include="pacmap_enhanced.dll" Condition="Exists('pacmap_enhanced.dll')">
      <PackagePath>pacmap_enhanced.dll</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>Always</CopyToPublishDirectory>
    </None>
    <None Include="libopenblas.dll" Condition="Exists('libopenblas.dll')">
      <PackagePath>libopenblas.dll</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>Always</CopyToPublishDirectory>
    </None>

    <!-- Linux Native Libraries -->
    <None Include="libpacmap_enhanced.so" Condition="Exists('libpacmap_enhanced.so')">
      <PackagePath>libpacmap_enhanced.so</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>Always</CopyToPublishDirectory>
    </None>
    <None Include="libopenblas.so.0" Condition="Exists('libopenblas.so.0')">
      <PackagePath>libopenblas.so.0</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>Always</CopyToPublishDirectory>
    </None>
  </ItemGroup>

  <!-- Copy Native Binaries to Output -->
  <Target Name="CopyNativeBinaries" BeforeTargets="Build">
    <ItemGroup>
      <NativeDlls Include="*.dll;*.so" />
    </ItemGroup>
    <Copy SourceFiles="@(NativeDlls)" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" Condition="Exists('%(Identity)')" />
    <Message Text="Copied native binaries to output: @(NativeDlls)" Importance="high" />
  </Target>

  <!-- Package Dependencies -->
  <ItemGroup>
    <PackageReference Include="System.Runtime.InteropServices" Version="4.3.0" />
  </ItemGroup>

  <!-- Build Configuration -->
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>

</Project>